const isArabic = require("is-arabic");

const { vkUtils } = require('../../../adapters/vk/vkUtils');

const { nicknameChange } = require('../../../domain/user/service/service');
const { registerNickKeyboard } = require('../../keyboard/inline');
const purchase = require("../business/business");

module.exports = async (msg, registerUser) => {
    try {
        const userId = msg.senderId || msg.userId;
        const register = registerUser;

        const inputNickName = await msg.question(
            '–ö—Ç–æ —Ç—ã –≤–æ–∏–Ω?\n\n‚úè –í—ã–±–µ—Ä–∏ –∏ –Ω–∞–ø–∏—à–∏ –∏–º—è —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:',
        );

        const nickname = inputNickName.text;

        if (nickname.length < 3 || nickname.length > 18) {
            return vkUtils.msg({
                peerId: userId,
                message: '‚ùå –ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –Ω–µ –º–æ–∂–µ—Ç\n–±—ã—Ç—å –º–µ–Ω—å—à–µ 3 —Å–∏–º–≤–æ–ª–æ–≤ –∏–ª–∏ –±–æ–ª—å—à–µ 18 —Å–∏–º–≤–æ–ª–æ–≤.',
                keyboard: registerNickKeyboard,
            });
        };

        const options = {
            count: nickname.length
        };

        if (isArabic(String(nickname), options)) {
            return vkUtils.msg({
                peerId: userId,
                message: '‚ùå –¢—ã —á–µ –∞—Ä–∞–±? –ò–º—è –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏–ª–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º. –¢–∞–∫–∂–µ –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ü–∏—Ñ—Ä—ã, —Å–∏–º–≤–æ–ª—ã –∏ —Å–º–∞–π–ª–∏–∫–∏',
                keyboard: registerNickKeyboard,
            }); 
        };

        const message = `üëç –•–æ—Ä–æ—à–∞—è —Ä–∞–±–æ—Ç–∞, ${nickname}.\n–¢–µ–ø–µ—Ä—å —Ç—ã –≥–æ—Ç–æ–≤ –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º.`;

        await Promise.all([
            nicknameChange(userId, nickname),

            vkUtils.msg({
                peerId: userId,
                message: message,
            }),
        ]);

        if (register) {
            await purchase(msg, true)
        };
    } catch (error) {
        console.log(error);
    };
};
